FUNCTION_BLOCK

VAR_INPUT
leftDistance : REAL;
rightDistance : REAL;
position : REAL;
END_VAR

VAR_OUTPUT
velocity : REAL;
END_VAR

FUZZIFY leftDistance
TERM veryClose := (0, 1) (10, 1) (40, 0);
TERM close := (10, 0) (40, 1) (60, 1) (90, 0);
TERM far := (60, 0) (90, 1) (100, 1);
END_FUZZIFY

FUZZIFY rightDistance
TERM veryClose := (0, 1) (10, 1) (40, 0);
TERM close := (10, 0) (40, 1) (60, 1) (90, 0);
TERM far := (60, 0) (90, 1) (100, 1);
END_FUZZIFY

FUZZIFY position
TERM left := (0, 1) (20, 1) (40, 0);
TERM center := (20, 0) (40, 1) (60, 1) (80, 0);
TERM right := (60, 0) (80, 1) (100, 1);
END_FUZZIFY

DEFUZZIFY velocity
TERM fastLeft := (0, 1) (25, 0);
TERM slowLeft := (0, 0) (25, 1) (50, 0);
TERM stay := (25, 0) (50, 1) (75, 0);
TERM slowRight := (50, 0) (75, 1) (100, 0);
TERM fastRight := (75, 0) (100, 1);
METHOD : COG;
DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK first
AND: MIN;
ACT: MIN;

RULE 0: IF position IS left AND leftDistance IS veryClose AND rightDistance IS veryClose THEN velocity IS slowRight;
RULE 1: IF position IS left AND leftDistance IS veryClose AND rightDistance IS close THEN velocity IS fastRight;
RULE 2: IF position IS left AND leftDistance IS veryClose AND rightDistance IS far THEN velocity IS fastRight;
RULE 3: IF position IS left AND leftDistance IS close AND rightDistance IS veryClose THEN velocity IS fastLeft;
RULE 4: IF position IS left AND leftDistance IS close AND rightDistance IS close THEN velocity IS slowRight;
RULE 5: IF position IS left AND leftDistance IS close AND rightDistance IS far THEN velocity IS slowRight;
RULE 6: IF position IS left AND leftDistance IS far AND rightDistance IS veryClose THEN velocity IS fastLeft;
RULE 7: IF position IS left AND leftDistance IS far AND rightDistance IS close THEN velocity IS slowRight;
RULE 8: IF position IS left AND leftDistance IS far AND rightDistance IS far THEN velocity IS slowRight;

RULE 9: IF position IS center AND leftDistance IS veryClose AND rightDistance IS veryClose THEN velocity IS stay;
RULE 10: IF position IS center AND leftDistance IS veryClose AND rightDistance IS close THEN velocity IS fastRight;
RULE 11: IF position IS center AND leftDistance IS veryClose AND rightDistance IS far THEN velocity IS fastRight;
RULE 12: IF position IS center AND leftDistance IS close AND rightDistance IS veryClose THEN velocity IS fastLeft;
RULE 13: IF position IS center AND leftDistance IS close AND rightDistance IS close THEN velocity IS stay;
RULE 14: IF position IS center AND leftDistance IS close AND rightDistance IS far THEN velocity IS slowRight;
RULE 15: IF position IS center AND leftDistance IS far AND rightDistance IS veryClose THEN velocity IS fastLeft;
RULE 16: IF position IS center AND leftDistance IS far AND rightDistance IS close THEN velocity IS slowLeft;
RULE 17: IF position IS center AND leftDistance IS far AND rightDistance IS far THEN velocity IS stay;

RULE 18: IF position IS right AND leftDistance IS veryClose AND rightDistance IS veryClose THEN velocity IS slowLeft;
RULE 19: IF position IS right AND leftDistance IS veryClose AND rightDistance IS close THEN velocity IS fastRight;
RULE 20: IF position IS right AND leftDistance IS veryClose AND rightDistance IS far THEN velocity IS fastRight;
RULE 21: IF position IS right AND leftDistance IS close AND rightDistance IS veryClose THEN velocity IS fastLeft;
RULE 22: IF position IS right AND leftDistance IS close AND rightDistance IS close THEN velocity IS slowLeft;
RULE 23: IF position IS right AND leftDistance IS close AND rightDistance IS far THEN velocity IS slowLeft;
RULE 24: IF position IS right AND leftDistance IS far AND rightDistance IS veryClose THEN velocity IS fastLeft;
RULE 25: IF position IS right AND leftDistance IS far AND rightDistance IS close THEN velocity IS slowLeft;
RULE 26: IF position IS right AND leftDistance IS far AND rightDistance IS far THEN velocity IS slowLeft;

END_RULEBLOCK
END_FUNCTION_BLOCK